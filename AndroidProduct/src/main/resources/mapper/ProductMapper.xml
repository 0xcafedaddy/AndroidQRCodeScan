<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qlu.android.product.dao.ProductMapper" >
  <resultMap id="BaseResultMap" type="com.qlu.android.product.pojo.Product" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="mid" property="mid" jdbcType="VARCHAR" />
    <result column="nam" property="nam" jdbcType="VARCHAR" />
    <result column="pd" property="pd" jdbcType="DATE" />
    <result column="gd" property="gd" jdbcType="DATE" />
    <result column="record" property="record" jdbcType="DATE" />
    <result column="frequency" property="frequency" jdbcType="INTEGER" />
    <result column="company" property="company" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="price" property="price" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, mid, nam, pd, gd, record, frequency, company, phone, price
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.qlu.android.product.pojo.ProductExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from product
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from product
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from product
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.qlu.android.product.pojo.ProductExample" >
    delete from product
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qlu.android.product.pojo.Product" >
    insert into product (id, mid, nam, 
      pd, gd, record, frequency, 
      company, phone, price
      )
    values (#{id,jdbcType=INTEGER}, #{mid,jdbcType=VARCHAR}, #{nam,jdbcType=VARCHAR}, 
      #{pd,jdbcType=DATE}, #{gd,jdbcType=DATE}, #{record,jdbcType=DATE}, #{frequency,jdbcType=INTEGER}, 
      #{company,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{price,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.qlu.android.product.pojo.Product" >
    insert into product
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="mid != null" >
        mid,
      </if>
      <if test="nam != null" >
        nam,
      </if>
      <if test="pd != null" >
        pd,
      </if>
      <if test="gd != null" >
        gd,
      </if>
      <if test="record != null" >
        record,
      </if>
      <if test="frequency != null" >
        frequency,
      </if>
      <if test="company != null" >
        company,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="price != null" >
        price,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="mid != null" >
        #{mid,jdbcType=VARCHAR},
      </if>
      <if test="nam != null" >
        #{nam,jdbcType=VARCHAR},
      </if>
      <if test="pd != null" >
        #{pd,jdbcType=DATE},
      </if>
      <if test="gd != null" >
        #{gd,jdbcType=DATE},
      </if>
      <if test="record != null" >
        #{record,jdbcType=DATE},
      </if>
      <if test="frequency != null" >
        #{frequency,jdbcType=INTEGER},
      </if>
      <if test="company != null" >
        #{company,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        #{price,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.qlu.android.product.pojo.ProductExample" resultType="java.lang.Integer" >
    select count(*) from product
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update product
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.mid != null" >
        mid = #{record.mid,jdbcType=VARCHAR},
      </if>
      <if test="record.nam != null" >
        nam = #{record.nam,jdbcType=VARCHAR},
      </if>
      <if test="record.pd != null" >
        pd = #{record.pd,jdbcType=DATE},
      </if>
      <if test="record.gd != null" >
        gd = #{record.gd,jdbcType=DATE},
      </if>
      <if test="record.record != null" >
        record = #{record.record,jdbcType=DATE},
      </if>
      <if test="record.frequency != null" >
        frequency = #{record.frequency,jdbcType=INTEGER},
      </if>
      <if test="record.company != null" >
        company = #{record.company,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null" >
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null" >
        price = #{record.price,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update product
    set id = #{record.id,jdbcType=INTEGER},
      mid = #{record.mid,jdbcType=VARCHAR},
      nam = #{record.nam,jdbcType=VARCHAR},
      pd = #{record.pd,jdbcType=DATE},
      gd = #{record.gd,jdbcType=DATE},
      record = #{record.record,jdbcType=DATE},
      frequency = #{record.frequency,jdbcType=INTEGER},
      company = #{record.company,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.qlu.android.product.pojo.Product" >
    update product
    <set >
      <if test="mid != null" >
        mid = #{mid,jdbcType=VARCHAR},
      </if>
      <if test="nam != null" >
        nam = #{nam,jdbcType=VARCHAR},
      </if>
      <if test="pd != null" >
        pd = #{pd,jdbcType=DATE},
      </if>
      <if test="gd != null" >
        gd = #{gd,jdbcType=DATE},
      </if>
      <if test="record != null" >
        record = #{record,jdbcType=DATE},
      </if>
      <if test="frequency != null" >
        frequency = #{frequency,jdbcType=INTEGER},
      </if>
      <if test="company != null" >
        company = #{company,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qlu.android.product.pojo.Product" >
    update product
    set mid = #{mid,jdbcType=VARCHAR},
      nam = #{nam,jdbcType=VARCHAR},
      pd = #{pd,jdbcType=DATE},
      gd = #{gd,jdbcType=DATE},
      record = #{record,jdbcType=DATE},
      frequency = #{frequency,jdbcType=INTEGER},
      company = #{company,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      price = #{price,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="selectProduct" resultMap="BaseResultMap" parameterType="java.lang.String">
  	select * from product where mid = #{mid}
  </select>
  
</mapper>